// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM64.hdl

/**
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], 
    a=RAM0load, b=RAM1load, c=RAM2load, d=RAM3load, e=RAM4load, f=RAM5load, g=RAM6load, h=RAM7load);

    RAM8(in=in, load=RAM0load, address=address[3..5], out=RAM0out);
    RAM8(in=in, load=RAM1load, address=address[3..5], out=RAM1out);
    RAM8(in=in, load=RAM2load, address=address[3..5], out=RAM2out);
    RAM8(in=in, load=RAM3load, address=address[3..5], out=RAM3out);
    RAM8(in=in, load=RAM4load, address=address[3..5], out=RAM4out);
    RAM8(in=in, load=RAM5load, address=address[3..5], out=RAM5out);
    RAM8(in=in, load=RAM6load, address=address[3..5], out=RAM6out);
    RAM8(in=in, load=RAM7load, address=address[3..5], out=RAM7out);

    Mux8Way16(a=RAM0out, b=RAM1out, c=RAM2out, d=RAM3out, e=RAM4out, f=RAM5out, g=RAM6out, h=RAM7out, sel=address[0..2], out=out);

}